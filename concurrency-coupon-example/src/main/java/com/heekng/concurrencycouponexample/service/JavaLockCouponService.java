package com.heekng.concurrencycouponexample.service;import com.heekng.concurrencycouponexample.domain.CouponService;import java.util.concurrent.ConcurrentHashMap;import java.util.concurrent.locks.ReentrantLock;import lombok.RequiredArgsConstructor;import org.springframework.stereotype.Service;/** *  ConcurrentHashMap을 이용해 동시성을 해결한다. *  ReentrantLock(true) 로 순서를 보장한다. *  **분산 환경에서 이슈가 발생할 수 있다.** */@Service@RequiredArgsConstructorpublic class JavaLockCouponService {    private final ConcurrentHashMap<Long, ReentrantLock> couponLock = new ConcurrentHashMap<>();    private final CouponService couponService;    public void appendCouponUser(Long couponId, Long userId) {        ReentrantLock lock = couponLock.computeIfAbsent(couponId, k -> new ReentrantLock(true));        lock.lock();        try {            couponService.appendCouponUser(couponId, userId);        } finally {            lock.unlock();        }    }}