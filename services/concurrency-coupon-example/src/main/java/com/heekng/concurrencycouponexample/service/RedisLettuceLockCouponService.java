package com.heekng.concurrencycouponexample.service;import com.heekng.concurrencycouponexample.domain.CouponService;import com.heekng.concurrencycouponexample.repository.RedisLockRepository;import lombok.RequiredArgsConstructor;import org.springframework.stereotype.Service;/** *  Redis Lettuce를 사용한 락 *  스핀락 방식으로 구현해야 하기 때문에 반복해서 락 획득 가능 여부를 체크해야 한다. *  setnx 명령어로 lock을 생성하고, delete 명령어로 lock을 해제한다. */@Service@RequiredArgsConstructorpublic class RedisLettuceLockCouponService {    private final CouponService couponService;    private final RedisLockRepository redisLockRepository;    public void appendCouponUser(Long couponId, Long userId) throws InterruptedException {        String lockKey = couponId.toString();        while (!redisLockRepository.getLock(lockKey)) {            Thread.sleep(100);        }        try {            couponService.appendCouponUser(couponId, userId);        } finally {            redisLockRepository.unLock(lockKey);        }    }}