package com.heekng.concurrencycouponexample.service;import com.heekng.concurrencycouponexample.domain.CouponService;import lombok.RequiredArgsConstructor;import org.springframework.stereotype.Service;/** *  낙관적 락 *  Entity의 @Version 컬럼을 통해 컬럼별 락을 관리한다. *  트랜잭션 커밋에 실패할 경우 코드단에서 재시도 로직을 추가해야 한다. */@Service@RequiredArgsConstructorpublic class DbOptimisticLockCouponService {    private final CouponService couponService;    public void appendCouponUser(Long couponId, Long userId) throws InterruptedException {        while (true) {            try {                couponService.appendCouponUserOptimistic(couponId, userId);                break;            } catch (Exception e) {                Thread.sleep(50);            }        }    }}